#!/usr/bin/env python3
"""
Test script for curtain cost calculation logic
"""


# Test calculation logic
def calculate_curtain_cost(fabric_type, height, width, zipper_count):
    """Calculate curtain cost based on parameters"""

    # Fabric prices per square meter
    fabric_prices = {
        "–ë—Ä–µ–∑–µ–Ω—Ç": 500,
        "–û–∫—Å—Ñ–æ—Ä–¥": 450
    }

    # Zipper price per linear meter
    zipper_price_per_meter = 300

    # Overlap for width calculation
    width_overlap = 0.1

    # Calculate costs
    fabric_price_per_m2 = fabric_prices[fabric_type]
    width_with_overlap = width + width_overlap
    area = height * width_with_overlap
    fabric_cost = area * fabric_price_per_m2

    # Calculate zipper cost
    zipper_cost = height * zipper_count * zipper_price_per_meter

    # Total cost
    total_cost = fabric_cost + zipper_cost

    return {
        "fabric_type": fabric_type,
        "height": height,
        "width": width,
        "width_with_overlap": width_with_overlap,
        "area": area,
        "fabric_cost": fabric_cost,
        "zipper_count": zipper_count,
        "zipper_cost": zipper_cost,
        "total_cost": total_cost
    }


def format_result(result):
    """Format calculation result as bot would display it"""
    zipper_text = {
        0: "–ë–µ–∑ –º–æ–ª–Ω–∏–∏",
        1: "1 —à—Ç. –ø–æ —Ü–µ–Ω—Ç—Ä—É",
        2: "2 —à—Ç. –ø–æ –±–æ–∫–∞–º"
    }[result["zipper_count"]]

    zipper_cost_text = f"{result['zipper_cost']}‚ÇΩ" if result['zipper_cost'] > 0 else "0‚ÇΩ"

    return (
        f"üßæ –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —à—Ç–æ—Ä—ã:\n\n"
        f"–¢–∫–∞–Ω—å: {result['fabric_type']}\n"
        f"–†–∞–∑–º–µ—Ä: {result['height']} –º (–≤—ã—Å–æ—Ç–∞) x {result['width']} –º (—à–∏—Ä–∏–Ω–∞)\n"
        f"–° —É—á—ë—Ç–æ–º –ø—Ä–∏–ø—É—Å–∫–∞: {result['width_with_overlap']} –º\n"
        f"–ü–ª–æ—â–∞–¥—å: {result['area']:.1f} –º¬≤\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∫–∞–Ω–∏: {result['fabric_cost']:,.0f}‚ÇΩ\n"
        f"–ú–æ–ª–Ω–∏—è: {zipper_text} ‚Äî {zipper_cost_text}\n"
        f"‚úÖ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result['total_cost']:,.0f}‚ÇΩ"
    )


if __name__ == "__main__":
    # Test with example from requirements
    test_result = calculate_curtain_cost("–ë—Ä–µ–∑–µ–Ω—Ç", 3, 3.8, 1)
    print("–¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç:")
    print(format_result(test_result))

    print("\n" + "=" * 50 + "\n")

    # Test with Oxford fabric
    test_result2 = calculate_curtain_cost("–û–∫—Å—Ñ–æ—Ä–¥", 2.5, 4.2, 2)
    print("–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç:")
    print(format_result(test_result2))
